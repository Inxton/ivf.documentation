### YamlMime:ManagedReference
items:
- uid: Vortex.Connector.ValueValidation.IValueBoundaries`1
  commentId: T:Vortex.Connector.ValueValidation.IValueBoundaries`1
  id: IValueBoundaries`1
  parent: Vortex.Connector.ValueValidation
  children:
  - Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMaxValue
  - Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMinValue
  langs:
  - csharp
  - vb
  name: IValueBoundaries<T>
  nameWithType: IValueBoundaries<T>
  fullName: Vortex.Connector.ValueValidation.IValueBoundaries<T>
  type: Interface
  source:
    remote:
      path: vortex.connectors/src/connectors/Vortex.Connector/ValidationRules/__IValueBoundaries.cs
      branch: guard_for_var
      repo: http://192.168.0.28/foxtroth.vortex/vortex.base/_git/ivf
    id: IValueBoundaries
    path: ../ivf/vortex.connectors/src/connectors/Vortex.Connector/ValidationRules/__IValueBoundaries.cs
    startLine: 6
  assemblies:
  - Vortex.Connector
  namespace: Vortex.Connector.ValueValidation
  summary: "\nContract for validation of a numerical value.\n"
  example: []
  syntax:
    content: public interface IValueBoundaries<T>
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Interface IValueBoundaries(Of T)
  extensionMethods:
  - Vortex.Connector.ValueValidation.IValueBoundaries`1.Vortex.Connector.IValueTagExtensions.Cast``1(System.Object)
  nameWithType.vb: IValueBoundaries(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: Vortex.Connector.ValueValidation.IValueBoundaries(Of T)
  name.vb: IValueBoundaries(Of T)
- uid: Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMinValue
  commentId: P:Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMinValue
  id: InstanceMinValue
  parent: Vortex.Connector.ValueValidation.IValueBoundaries`1
  langs:
  - csharp
  - vb
  name: InstanceMinValue
  nameWithType: IValueBoundaries<T>.InstanceMinValue
  fullName: Vortex.Connector.ValueValidation.IValueBoundaries<T>.InstanceMinValue
  type: Property
  source:
    remote:
      path: vortex.connectors/src/connectors/Vortex.Connector/ValidationRules/__IValueBoundaries.cs
      branch: guard_for_var
      repo: http://192.168.0.28/foxtroth.vortex/vortex.base/_git/ivf
    id: InstanceMinValue
    path: ../ivf/vortex.connectors/src/connectors/Vortex.Connector/ValidationRules/__IValueBoundaries.cs
    startLine: 11
  assemblies:
  - Vortex.Connector
  namespace: Vortex.Connector.ValueValidation
  summary: "\nGets min. acceptable value.\n"
  example: []
  syntax:
    content: T InstanceMinValue { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: ReadOnly Property InstanceMinValue As T
  overload: Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMinValue*
  nameWithType.vb: IValueBoundaries(Of T).InstanceMinValue
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Vortex.Connector.ValueValidation.IValueBoundaries(Of T).InstanceMinValue
- uid: Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMaxValue
  commentId: P:Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMaxValue
  id: InstanceMaxValue
  parent: Vortex.Connector.ValueValidation.IValueBoundaries`1
  langs:
  - csharp
  - vb
  name: InstanceMaxValue
  nameWithType: IValueBoundaries<T>.InstanceMaxValue
  fullName: Vortex.Connector.ValueValidation.IValueBoundaries<T>.InstanceMaxValue
  type: Property
  source:
    remote:
      path: vortex.connectors/src/connectors/Vortex.Connector/ValidationRules/__IValueBoundaries.cs
      branch: guard_for_var
      repo: http://192.168.0.28/foxtroth.vortex/vortex.base/_git/ivf
    id: InstanceMaxValue
    path: ../ivf/vortex.connectors/src/connectors/Vortex.Connector/ValidationRules/__IValueBoundaries.cs
    startLine: 16
  assemblies:
  - Vortex.Connector
  namespace: Vortex.Connector.ValueValidation
  summary: "\nGets max. acceptable valie.\n"
  example: []
  syntax:
    content: T InstanceMaxValue { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: ReadOnly Property InstanceMaxValue As T
  overload: Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMaxValue*
  nameWithType.vb: IValueBoundaries(Of T).InstanceMaxValue
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Vortex.Connector.ValueValidation.IValueBoundaries(Of T).InstanceMaxValue
references:
- uid: Vortex.Connector.ValueValidation
  commentId: N:Vortex.Connector.ValueValidation
  name: Vortex.Connector.ValueValidation
  nameWithType: Vortex.Connector.ValueValidation
  fullName: Vortex.Connector.ValueValidation
- uid: Vortex.Connector.ValueValidation.IValueBoundaries`1.Vortex.Connector.IValueTagExtensions.Cast``1(System.Object)
  commentId: M:Vortex.Connector.IValueTagExtensions.Cast``1(``0,System.Object)
  parent: Vortex.Connector.IValueTagExtensions
  definition: Vortex.Connector.IValueTagExtensions.Cast``1(``0,System.Object)
  name: Cast<IValueBoundaries<T>>(Object)
  nameWithType: IValueTagExtensions.Cast<IValueBoundaries<T>>(Object)
  fullName: Vortex.Connector.IValueTagExtensions.Cast<Vortex.Connector.ValueValidation.IValueBoundaries<T>>(System.Object)
  nameWithType.vb: IValueTagExtensions.Cast(Of IValueBoundaries(Of T))(Object)
  fullName.vb: Vortex.Connector.IValueTagExtensions.Cast(Of Vortex.Connector.ValueValidation.IValueBoundaries(Of T))(System.Object)
  name.vb: Cast(Of IValueBoundaries(Of T))(Object)
  spec.csharp:
  - uid: Vortex.Connector.IValueTagExtensions.Cast``1(System.Object)
    name: Cast<IValueBoundaries<T>>
    nameWithType: IValueTagExtensions.Cast<IValueBoundaries<T>>
    fullName: Vortex.Connector.IValueTagExtensions.Cast<Vortex.Connector.ValueValidation.IValueBoundaries<T>>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vortex.Connector.IValueTagExtensions.Cast``1(System.Object)
    name: Cast(Of IValueBoundaries(Of T))
    nameWithType: IValueTagExtensions.Cast(Of IValueBoundaries(Of T))
    fullName: Vortex.Connector.IValueTagExtensions.Cast(Of Vortex.Connector.ValueValidation.IValueBoundaries(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vortex.Connector.IValueTagExtensions.Cast``1(``0,System.Object)
  commentId: M:Vortex.Connector.IValueTagExtensions.Cast``1(``0,System.Object)
  isExternal: true
  name: Cast<T>(T, Object)
  nameWithType: IValueTagExtensions.Cast<T>(T, Object)
  fullName: Vortex.Connector.IValueTagExtensions.Cast<T>(T, System.Object)
  nameWithType.vb: IValueTagExtensions.Cast(Of T)(T, Object)
  fullName.vb: Vortex.Connector.IValueTagExtensions.Cast(Of T)(T, System.Object)
  name.vb: Cast(Of T)(T, Object)
  spec.csharp:
  - uid: Vortex.Connector.IValueTagExtensions.Cast``1(``0,System.Object)
    name: Cast<T>
    nameWithType: IValueTagExtensions.Cast<T>
    fullName: Vortex.Connector.IValueTagExtensions.Cast<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vortex.Connector.IValueTagExtensions.Cast``1(``0,System.Object)
    name: Cast(Of T)
    nameWithType: IValueTagExtensions.Cast(Of T)
    fullName: Vortex.Connector.IValueTagExtensions.Cast(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vortex.Connector.IValueTagExtensions
  commentId: T:Vortex.Connector.IValueTagExtensions
  parent: Vortex.Connector
  name: IValueTagExtensions
  nameWithType: IValueTagExtensions
  fullName: Vortex.Connector.IValueTagExtensions
- uid: Vortex.Connector
  commentId: N:Vortex.Connector
  name: Vortex.Connector
  nameWithType: Vortex.Connector
  fullName: Vortex.Connector
- uid: Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMinValue*
  commentId: Overload:Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMinValue
  name: InstanceMinValue
  nameWithType: IValueBoundaries<T>.InstanceMinValue
  fullName: Vortex.Connector.ValueValidation.IValueBoundaries<T>.InstanceMinValue
  nameWithType.vb: IValueBoundaries(Of T).InstanceMinValue
  fullName.vb: Vortex.Connector.ValueValidation.IValueBoundaries(Of T).InstanceMinValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMaxValue*
  commentId: Overload:Vortex.Connector.ValueValidation.IValueBoundaries`1.InstanceMaxValue
  name: InstanceMaxValue
  nameWithType: IValueBoundaries<T>.InstanceMaxValue
  fullName: Vortex.Connector.ValueValidation.IValueBoundaries<T>.InstanceMaxValue
  nameWithType.vb: IValueBoundaries(Of T).InstanceMaxValue
  fullName.vb: Vortex.Connector.ValueValidation.IValueBoundaries(Of T).InstanceMaxValue
