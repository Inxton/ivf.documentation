### YamlMime:ManagedReference
items:
- uid: Vortex.Presentation.Wpf.WpfLayoutProvider
  commentId: T:Vortex.Presentation.Wpf.WpfLayoutProvider
  id: WpfLayoutProvider
  parent: Vortex.Presentation.Wpf
  children:
  - Vortex.Presentation.Wpf.WpfLayoutProvider.#ctor
  - Vortex.Presentation.Wpf.WpfLayoutProvider._layoutDictionary
  - Vortex.Presentation.Wpf.WpfLayoutProvider.GetControl(Layout)
  langs:
  - csharp
  - vb
  name: WpfLayoutProvider
  nameWithType: WpfLayoutProvider
  fullName: Vortex.Presentation.Wpf.WpfLayoutProvider
  type: Class
  source:
    remote:
      path: vortex.framework.presentation/src/wpf/Vortex.Presentation.Wpf/Provider/WpfLayoutProvider.cs
      branch: fix/build_remove_qlik_tests
      repo: http://192.168.0.28/foxtroth.vortex/vortex.base/_git/ivf
    id: WpfLayoutProvider
    path: ../ivf/vortex.framework.presentation/src/wpf/Vortex.Presentation.Wpf/Provider/WpfLayoutProvider.cs
    startLine: 14
  assemblies:
  - Vortex.Presentation.Wpf
  namespace: Vortex.Presentation.Wpf
  summary: "\nProvides layout provider for Vortex WPF application.\n"
  example:
  - <pre><code source="..\Examples\PresentationWpfExamples\App.xaml.cs" region="CreateLayoutProvider"></code></pre>
  syntax:
    content: 'public class WpfLayoutProvider : ILayoutProvider'
    content.vb: >-
      Public Class WpfLayoutProvider
          Implements ILayoutProvider
  inheritance:
  - System.Object
  implements:
  - Vortex.Framework.Abstractions.Presentation.ILayoutProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Object.Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Vortex.Presentation.Wpf.WpfLayoutProvider.#ctor
  commentId: M:Vortex.Presentation.Wpf.WpfLayoutProvider.#ctor
  id: '#ctor'
  parent: Vortex.Presentation.Wpf.WpfLayoutProvider
  langs:
  - csharp
  - vb
  name: WpfLayoutProvider()
  nameWithType: WpfLayoutProvider.WpfLayoutProvider()
  fullName: Vortex.Presentation.Wpf.WpfLayoutProvider.WpfLayoutProvider()
  type: Constructor
  source:
    remote:
      path: vortex.framework.presentation/src/wpf/Vortex.Presentation.Wpf/Provider/WpfLayoutProvider.cs
      branch: fix/build_remove_qlik_tests
      repo: http://192.168.0.28/foxtroth.vortex/vortex.base/_git/ivf
    id: .ctor
    path: ../ivf/vortex.framework.presentation/src/wpf/Vortex.Presentation.Wpf/Provider/WpfLayoutProvider.cs
    startLine: 19
  assemblies:
  - Vortex.Presentation.Wpf
  namespace: Vortex.Presentation.Wpf
  summary: "\nCreates new instance of <xref href=\"Vortex.Presentation.Wpf.WpfLayoutProvider\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public WpfLayoutProvider()
    content.vb: Public Sub New
  overload: Vortex.Presentation.Wpf.WpfLayoutProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Vortex.Presentation.Wpf.WpfLayoutProvider._layoutDictionary
  commentId: F:Vortex.Presentation.Wpf.WpfLayoutProvider._layoutDictionary
  id: _layoutDictionary
  parent: Vortex.Presentation.Wpf.WpfLayoutProvider
  langs:
  - csharp
  - vb
  name: _layoutDictionary
  nameWithType: WpfLayoutProvider._layoutDictionary
  fullName: Vortex.Presentation.Wpf.WpfLayoutProvider._layoutDictionary
  type: Field
  source:
    remote:
      path: vortex.framework.presentation/src/wpf/Vortex.Presentation.Wpf/Provider/WpfLayoutProvider.cs
      branch: fix/build_remove_qlik_tests
      repo: http://192.168.0.28/foxtroth.vortex/vortex.base/_git/ivf
    id: _layoutDictionary
    path: ../ivf/vortex.framework.presentation/src/wpf/Vortex.Presentation.Wpf/Provider/WpfLayoutProvider.cs
    startLine: 34
  assemblies:
  - Vortex.Presentation.Wpf
  namespace: Vortex.Presentation.Wpf
  syntax:
    content: readonly Dictionary<Layout, (string assembly, string fullTypeName)> _layoutDictionary
    return:
      type: System.Collections.Generic.Dictionary{Layout,System.ValueTuple{System.String,System.String}}
    content.vb: ReadOnly _layoutDictionary As Dictionary(Of Layout, (assembly As String, fullTypeName As String))
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
- uid: Vortex.Presentation.Wpf.WpfLayoutProvider.GetControl(Layout)
  commentId: M:Vortex.Presentation.Wpf.WpfLayoutProvider.GetControl(Layout)
  id: GetControl(Layout)
  parent: Vortex.Presentation.Wpf.WpfLayoutProvider
  langs:
  - csharp
  - vb
  name: GetControl(Layout)
  nameWithType: WpfLayoutProvider.GetControl(Layout)
  fullName: Vortex.Presentation.Wpf.WpfLayoutProvider.GetControl(Layout)
  type: Method
  source:
    remote:
      path: vortex.framework.presentation/src/wpf/Vortex.Presentation.Wpf/Provider/WpfLayoutProvider.cs
      branch: fix/build_remove_qlik_tests
      repo: http://192.168.0.28/foxtroth.vortex/vortex.base/_git/ivf
    id: GetControl
    path: ../ivf/vortex.framework.presentation/src/wpf/Vortex.Presentation.Wpf/Provider/WpfLayoutProvider.cs
    startLine: 41
  assemblies:
  - Vortex.Presentation.Wpf
  namespace: Vortex.Presentation.Wpf
  summary: "\nGets layout control.\n"
  example: []
  syntax:
    content: public (string assembly, string fullTypeName) GetControl(Layout layoutType)
    parameters:
    - id: layoutType
      type: Layout
      description: Type of <xref href="Layout" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.ValueTuple{System.String,System.String}
      description: ''
    content.vb: Public Function GetControl(layoutType As Layout) As(assembly As String, fullTypeName As String)
  overload: Vortex.Presentation.Wpf.WpfLayoutProvider.GetControl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Vortex.Presentation.Wpf
  commentId: N:Vortex.Presentation.Wpf
  name: Vortex.Presentation.Wpf
  nameWithType: Vortex.Presentation.Wpf
  fullName: Vortex.Presentation.Wpf
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vortex.Framework.Abstractions.Presentation.ILayoutProvider
  commentId: T:Vortex.Framework.Abstractions.Presentation.ILayoutProvider
  parent: Vortex.Framework.Abstractions.Presentation
  name: ILayoutProvider
  nameWithType: ILayoutProvider
  fullName: Vortex.Framework.Abstractions.Presentation.ILayoutProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull
  commentId: M:Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull(System.Object)
  parent: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions
  definition: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull(System.Object)
  name: AttributeFormatOrNull()
  nameWithType: AttributeStringFormatExtensions.AttributeFormatOrNull()
  fullName: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull()
  spec.csharp:
  - uid: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull
    name: AttributeFormatOrNull
    nameWithType: AttributeStringFormatExtensions.AttributeFormatOrNull
    fullName: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull
    name: AttributeFormatOrNull
    nameWithType: AttributeStringFormatExtensions.AttributeFormatOrNull
    fullName: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vortex.Framework.Abstractions.Presentation
  commentId: N:Vortex.Framework.Abstractions.Presentation
  name: Vortex.Framework.Abstractions.Presentation
  nameWithType: Vortex.Framework.Abstractions.Presentation
  fullName: Vortex.Framework.Abstractions.Presentation
- uid: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull(System.Object)
  commentId: M:Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull(System.Object)
  isExternal: true
  name: AttributeFormatOrNull(Object)
  nameWithType: AttributeStringFormatExtensions.AttributeFormatOrNull(Object)
  fullName: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull(System.Object)
  spec.csharp:
  - uid: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull(System.Object)
    name: AttributeFormatOrNull
    nameWithType: AttributeStringFormatExtensions.AttributeFormatOrNull
    fullName: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull(System.Object)
    name: AttributeFormatOrNull
    nameWithType: AttributeStringFormatExtensions.AttributeFormatOrNull
    fullName: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions.AttributeFormatOrNull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions
  commentId: T:Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions
  parent: Vortex.Presentation.Controls.Wpf.Extension
  name: AttributeStringFormatExtensions
  nameWithType: AttributeStringFormatExtensions
  fullName: Vortex.Presentation.Controls.Wpf.Extension.AttributeStringFormatExtensions
- uid: Vortex.Presentation.Controls.Wpf.Extension
  commentId: N:Vortex.Presentation.Controls.Wpf.Extension
  name: Vortex.Presentation.Controls.Wpf.Extension
  nameWithType: Vortex.Presentation.Controls.Wpf.Extension
  fullName: Vortex.Presentation.Controls.Wpf.Extension
- uid: Vortex.Presentation.Wpf.WpfLayoutProvider
  commentId: T:Vortex.Presentation.Wpf.WpfLayoutProvider
  name: WpfLayoutProvider
  nameWithType: WpfLayoutProvider
  fullName: Vortex.Presentation.Wpf.WpfLayoutProvider
- uid: Vortex.Presentation.Wpf.WpfLayoutProvider.#ctor*
  commentId: Overload:Vortex.Presentation.Wpf.WpfLayoutProvider.#ctor
  name: WpfLayoutProvider
  nameWithType: WpfLayoutProvider.WpfLayoutProvider
  fullName: Vortex.Presentation.Wpf.WpfLayoutProvider.WpfLayoutProvider
- uid: System.Collections.Generic.Dictionary{Layout,System.ValueTuple{System.String,System.String}}
  commentId: T:System.Collections.Generic.Dictionary{Layout,System.ValueTuple{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Layout, ValueTuple<String, String>>
  nameWithType: Dictionary<Layout, ValueTuple<String, String>>
  fullName: System.Collections.Generic.Dictionary<Layout, System.ValueTuple<System.String, System.String>>
  nameWithType.vb: Dictionary(Of Layout, ValueTuple(Of String, String))
  fullName.vb: System.Collections.Generic.Dictionary(Of Layout, System.ValueTuple(Of System.String, System.String))
  name.vb: Dictionary(Of Layout, ValueTuple(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Layout
    name: Layout
    nameWithType: Layout
    fullName: Layout
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Layout
    name: Layout
    nameWithType: Layout
    fullName: Layout
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Layout
  commentId: T:Layout
  name: Layout
  nameWithType: Layout
  fullName: Layout
- uid: Vortex.Presentation.Wpf.WpfLayoutProvider.GetControl*
  commentId: Overload:Vortex.Presentation.Wpf.WpfLayoutProvider.GetControl
  name: GetControl
  nameWithType: WpfLayoutProvider.GetControl
  fullName: Vortex.Presentation.Wpf.WpfLayoutProvider.GetControl
- uid: System.ValueTuple{System.String,System.String}
  commentId: T:System.ValueTuple{System.String,System.String}
  parent: System
  isExternal: true
  name: ValueTuple<String, String>
  nameWithType: ValueTuple<String, String>
  fullName: System.ValueTuple<System.String, System.String>
  nameWithType.vb: ValueTuple(Of String, String)
  fullName.vb: System.ValueTuple(Of System.String, System.String)
  name.vb: ValueTuple(Of String, String)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
